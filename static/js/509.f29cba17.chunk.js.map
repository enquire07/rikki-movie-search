{"version":3,"file":"static/js/509.f29cba17.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"poster\":\"MovieDetails_poster__Gw9Qy\"};","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { Link, Route, Routes, useParams } from 'react-router-dom';\nimport {\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n} from '../../services/api';\nimport styles from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n    fetchMovieCredits(movieId).then(setCast);\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div className={styles.movieDetails}>\n      {movie && (\n        <>\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n\n          <Suspense fallback={<div>Loading...</div>}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast cast={cast} />} />\n              <Route path=\"reviews\" element={<Reviews reviews={reviews} />} />\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// src/services/api.js\n// import axios from 'axios';\n\n// const API_KEY = 'f3915ecc527b8b3874ce087ec4108796';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export const fetchTrendingMovies = async () => {\n//   const response = await axios.get(\n//     `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n//   );\n//   return response.data.results;\n// };\n\n// export const searchMovies = async query => {\n//   const response = await axios.get(\n//     `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n//   );\n//   return response.data.results;\n// };\n\n// export const fetchMovieDetails = async movieId => {\n//   const response = await axios.get(\n//     `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n//   );\n//   return response.data;\n// };\n\n// export const fetchMovieCredits = async movieId => {\n//   const response = await axios.get(\n//     `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//   );\n//   return response.data.cast;\n// };\n\n// export const fetchMovieReviews = async movieId => {\n//   const response = await axios.get(\n//     `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n//   );\n//   return response.data.results;\n// };\n\n//next\nimport axios from 'axios';\n\nconst API_KEY = 'f3915ecc527b8b3874ce087ec4108796';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return [];\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/week`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n"],"names":["Cast","lazy","Reviews","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","cast","setCast","_useState5","_useState6","reviews","setReviews","useEffect","fetchMovieDetails","then","fetchMovieCredits","fetchMovieReviews","_jsx","className","styles","children","_jsxs","_Fragment","title","overview","Link","to","Suspense","fallback","Routes","Route","path","element","API_KEY","BASE_URL","searchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","response","_context","prev","next","axios","concat","params","api_key","sent","abrupt","data","results","t0","console","error","stop","_x","apply","arguments","fetchTrendingMovies","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}